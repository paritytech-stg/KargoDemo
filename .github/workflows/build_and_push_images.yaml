name: Build and Push Images

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  parse-images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.extract.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install yq (mikefarah)
        run: |
          YQ_VERSION=v4.33.1
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Extract images from values.yaml
        id: extract
        run: |
          # produce a JSON array of objects {name, dockerfile, context, repository}
          images_json=$(yq -o=json -I=0 '.images // {} | to_entries | map({"name": .key, "dockerfile": .value.dockerfile, "context": .value.context, "repository": .value.repository})' values.yaml)
          echo "images=${images_json}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: parse-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.parse-images.outputs.images) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        id: set-lower
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_OUTPUT}
          echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_OUTPUT}
        env:
          OWNER: '${{ github.repository_owner }}'
          REPOSITORY: '${{ github.event.repository.name }}'

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image.context || '.' }}
          file: ${{ matrix.image.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ steps.set-lower.outputs.OWNER_LC }}/${{ steps.set-lower.outputs.REPOSITORY_LC }}/${{ matrix.image.name }}:${{ github.sha }}
            ghcr.io/${{ steps.set-lower.outputs.OWNER_LC }}/${{ steps.set-lower.outputs.REPOSITORY_LC }}/${{ matrix.image.name }}:latest
